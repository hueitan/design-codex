@import ( reference ) '@wikimedia/codex-design-tokens/theme-wikimedia-ui.less';

// Style an icon suitable for display inside TextInput or a component that contains a Menu.
// This mixin requires three elements to work:
// - The icon parent element - This element should have a `position: relative` applied
// - The icon element - On which this mixin is applied
// - An icon sibling element (usually TextInput or component with Menu) - On which to apply
// the `.cdx-mixin-icon-wrapper-padding()` mixin
// Default value for `@param-min-size-icon` is min-size-icon, a px value, to ensure user font size
// scaling while being perfectly rendered at 100% text zoom level and satisfying at higher levels.
//
// @param {(start|end|center)} align - Tell the absolutely positioned icon where to anchor itself.
// @param {px} min-size-icon - The minimum size of the icon.
// @param {px|em} size-icon - The size of the icon.
// @param {px} external-padding - The external horizontal padding expected on the parent element of the icon.
// @param {px|em|%} top - The vertical position of the icon. If set to @spacing-half, the icon will be vertically centered.
// @param {px|em} height - The height of the icon. Only change this if that is needed to vertically align the icon when using a custom value for @param-top
.cdx-mixin-icon( @param-align, @param-min-size-icon: @min-size-icon-medium, @param-size-icon: @size-icon-medium, @param-external-padding: @spacing-75, @param-top: @spacing-half, @param-height: @param-size-icon ) {
	// Vertically center the icon by moving it down 50% (`@spacing-half`) of the height of the handle,
	// then moving it up by 50% of the height of the icon (translateY uses the element height
	// while top uses the offset parent's height).
	position: absolute;
	top: @param-top;
	// Provide way to override default sizes from Icon for small size icons like 'clear'
	// in clearable TextInput.
	min-width: @param-min-size-icon;
	min-height: @param-min-size-icon;
	width: @param-size-icon;
	height: @param-height;
	transition-property: @transition-property-icon;
	transition-duration: @transition-duration-base;

	& when ( @param-align = start ) {
		left: @param-external-padding;
	};

	& when ( @param-align = end ) {
		right: @param-external-padding;
	};

	// When top is the default 50% and align is not center,
	// transform & translate Y axis to vertically center the icon.
	& when ( @param-top = @spacing-half ) and not ( @param-align = center ) {
		transform: translateY( calc( -1 * @spacing-half ) );
	};

	// Horizontally and vertically center the icon when align is center and top is default value.
	// Note, this could also be achieved by using Flexbox, by using `align-self: center;
	// vertical-align: initial;`
	& when ( @param-align = center ) and ( @param-top = @spacing-half ) {
		left: @spacing-half;
		transform: translate( calc( -1 * @spacing-half ), calc( -1 * @spacing-half ) );
	};

	// When align is center and top is a non-default value,
	// transform & translate X axis to horizontally center the icon.
	& when ( @param-align = center ) and not ( @param-top = @spacing-half ) {
		left: @spacing-half;
		transform: translateX( calc( -1 * @spacing-half ) );
	};
}

// Set the padding required in a parent “wrapper” element of an icon being displayed using
// `.cdx-mixin-icon()`.
// This mixin is only required when the icon has an `align` parameter set to `start` or `end`.
//
// @param {(start|end)} align - Determine on which side of the element to apply the padding. This must be
// the same value as the `align` parameter of the icon.
// @param {px} external-padding - The external horizontal padding expected on the parent element of the icon.
// @param {px} size-icon - The size of the icon.
.cdx-mixin-icon-wrapper-padding( @param-align, @param-external-padding: @spacing-75, @param-size-icon: @size-icon-medium ) {
	& when ( @param-align = start ) {
		padding-left: calc( @spacing-50 + @param-external-padding + @param-size-icon );
	}

	& when ( @param-align = end ) {
		// For some reason stylelint is failing asking to remove the semicolons,
		// but it also fails if you remove it
		/* stylelint-disable @stylistic/no-extra-semicolons */
		padding-right: calc( @spacing-50 + @param-external-padding + @param-size-icon );
	}
};
